# LogLayer

> The modern logging library for Typescript / Javascript

LogLayer is structured logging library with a fluent API for specifying log messages, metadata and errors. It supports multiple logging libraries and cloud providers such as pino, winston, and DataDog.

## Table of Contents

### Introduction

- [About LogLayer](https://loglayer.dev/introduction.md): Learn more about LogLayer and how it unifies your logging experience
- [Get started with LogLayer](https://loglayer.dev/getting-started.md): Learn how to install and use LogLayer in your project
- [Configuring LogLayer](https://loglayer.dev/configuration.md): Learn how to configure LogLayer to customize its behavior

### Logging API

- [Logging Basics With LogLayer](https://loglayer.dev/logging-api/basic-logging.md): Learn how to log messages at different severity levels with LogLayer
- [Context Logging in LogLayer](https://loglayer.dev/logging-api/context.md): Learn how to create logs with context data in LogLayer
- [Logging Metadata in LogLayer](https://loglayer.dev/logging-api/metadata.md): Learn how to log structured metadata with your log messages in LogLayer
- [Error Handling in LogLayer](https://loglayer.dev/logging-api/error-handling.md): Learn how to pass errors to LogLayer for logging
- [Child Logging in LogLayer](https://loglayer.dev/logging-api/child-loggers.md): Learn how to create child loggers in LogLayer
- [Transport Management](https://loglayer.dev/logging-api/transport-management.md): How to manage transports in LogLayer
- [LogLayer Tips for Typescript](https://loglayer.dev/logging-api/typescript.md): Notes on using LogLayer with Typescript
- [Using MockLogLayer for Unit Testing in LogLayer](https://loglayer.dev/logging-api/unit-testing.md): Learn how to silence logging during unit tests using MockLogLayer

### Transports

- [Available Transports for LogLayer](https://loglayer.dev/transports.md): Logging libraries that that you can use with LogLayer
- [Configuration Options for LogLayer Transports](https://loglayer.dev/transports/configuration.md): Learn how to configure LogLayer transports
- [Using Multiple Transports](https://loglayer.dev/transports/multiple-transports.md): Learn how to use multiple transports with LogLayer
- [Creating Custom Transports](https://loglayer.dev/transports/creating-transports.md): Learn how to create custom transports for LogLayer
- [Testing Transports](https://loglayer.dev/transports/testing-transports.md): Learn how to test transports for LogLayer

#### Supported Loggers

- [Console Transport for LogLayer](https://loglayer.dev/transports/console.md): Send logs to the console with the LogLayer logging library
- [AWS Lambda Powertools Transport for LogLayer](https://loglayer.dev/transports/aws-lambda-powertools.md): Logging for AWS Lambdas with the LogLayer logging library
- [Bunyan Transport for LogLayer](https://loglayer.dev/transports/bunyan.md): Send logs to Bunyan with the LogLayer logging library
- [Consola Transport for LogLayer](https://loglayer.dev/transports/consola.md): Send logs to Consola with the LogLayer logging library
- [Electron-log Transport for LogLayer](https://loglayer.dev/transports/electron-log.md): Send logs to electron-log with the LogLayer logging library
- [Log4js Transport for LogLayer](https://loglayer.dev/transports/log4js.md): Send logs to Log4js with the LogLayer logging library
- [loglevel Transport for LogLayer](https://loglayer.dev/transports/loglevel.md): Send logs to loglevel with the LogLayer logging library
- [Pino Transport for LogLayer](https://loglayer.dev/transports/pino.md): Send logs to Pino with the LogLayer logging library
- [Roarr Transport for LogLayer](https://loglayer.dev/transports/roarr.md): Send logs to Roarr with the LogLayer logging library
- [Signale Transport for LogLayer](https://loglayer.dev/transports/signale.md): Send logs to Signale with the LogLayer logging library
- [TsLog Transport for LogLayer](https://loglayer.dev/transports/tslog.md): Send logs to TsLog with the LogLayer logging library
- [Tracer Transport for LogLayer](https://loglayer.dev/transports/tracer.md): Send logs to Tracer with the LogLayer logging library
- [Winston Transport for LogLayer](https://loglayer.dev/transports/winston.md): Send logs to Winston with the LogLayer logging library

#### Cloud Providers

- [Axiom Transport for LogLayer](https://loglayer.dev/transports/axiom.md): Send logs to Axiom cloud logging platform with the LogLayer logging library
- [DataDog Transport for LogLayer](https://loglayer.dev/transports/datadog.md): Send logs to DataDog with the LogLayer logging library
- [DataDog Browser Logs Transport for LogLayer](https://loglayer.dev/transports/datadog-browser-logs.md): Send logs using the DataDog Browser Logs library with LogLayer
- [Dynatrace Transport for LogLayer](https://loglayer.dev/transports/dynatrace.md): Send logs to Dynatrace with the LogLayer logging library
- [Google Cloud Logging Transport for LogLayer](https://loglayer.dev/transports/google-cloud-logging.md): Send logs to Google Cloud Logging with the LogLayer logging library
- [New Relic Transport for LogLayer](https://loglayer.dev/transports/new-relic.md): Send logs to New Relic with the LogLayer logging library
- [Sumo Logic Transport for LogLayer](https://loglayer.dev/transports/sumo-logic.md): Send logs to Sumo Logic with the LogLayer logging library

#### Other Transports

- [Log File Rotation Transport for LogLayer](https://loglayer.dev/transports/log-file-rotation.md): Write logs to files with automatic rotation based on size or time with the LogLayer logging library
- [OpenTelemetry Transport](https://loglayer.dev/transports/opentelemetry.md): Send logs to OpenTelemetry with the LogLayer logging library
- [Pretty printing in the Terminal for LogLayer](https://loglayer.dev/transports/pretty-terminal.md): Interact with pretty printed logs in the terminal

### Plugins

- [Plugins](https://loglayer.dev/plugins.md): Learn how to create and use plugins with LogLayer
- [Creating LogLayer Plugins](https://loglayer.dev/plugins/creating-plugins.md): Learn how to create custom plugins for LogLayer
- [Testing LogLayer Plugins](https://loglayer.dev/plugins/testing-plugins.md): Learn how to write tests for your LogLayer plugins

#### Available Plugins

- [Filter Plugin](https://loglayer.dev/plugins/filter.md): Filter logs using string patterns, regular expressions, or JSON Queries
- [OpenTelemetry Plugin](https://loglayer.dev/plugins/opentelemetry.md): Add OpenTelemetry trace context to logs using LogLayer
- [Redaction Plugin for LogLayer](https://loglayer.dev/plugins/redaction.md): Learn how to use the redaction plugin to protect sensitive data in your logs
- [Sprintf Plugin](https://loglayer.dev/plugins/sprintf.md): Printf-style string formatting support for LogLayer

### Context Managers (v6)

- [Context Managers](https://loglayer.dev/context-managers.md): Learn how to create and use context managers with LogLayer
- [Creating a Context Manager](https://loglayer.dev/context-managers/creating-context-managers.md): Learn how to create a custom context manager for LogLayer

#### Available Context Managers

- [Default Context Manager](https://loglayer.dev/context-managers/default.md): The default context manager used in LogLayer.
- [Linked Context Manager](https://loglayer.dev/context-managers/linked.md): Share context between parent and child logs in LogLayer.

### Example Integrations

- [Using LogLayer with Async Local Storage / Async hooks](https://loglayer.dev/example-integrations/async-context.md): Learn how to implement LogLayer across async contexts
- [Using LogLayer with Express](https://loglayer.dev/example-integrations/express.md): Learn how to implement LogLayer with Express
- [Using LogLayer with Fastify](https://loglayer.dev/example-integrations/fastify.md): Learn how to implement LogLayer with Fastify
- [Custom logging in Next.js](https://loglayer.dev/example-integrations/nextjs.md): Learn how to implement LogLayer with Next.js

