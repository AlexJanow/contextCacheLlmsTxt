# LLM Documentation for Grafbase

Grafbase is the easiest way to manage large scale federated graphs and is the fastest GraphQL Gateway on the market.
Compose your unified API from multiple data sources in just a few minutes with the Grafbase CLI.

## Docs
- [Gateway - Installation](https://grafbase.com/docs/gateway/installation): How to install the Grafbase Gateway
- [Gateway - Deployment - Docker](https://grafbase.com/docs/gateway/deployment/docker)
- [Gateway - Deployment - Kubernetes](https://grafbase.com/docs/gateway/deployment/kubernetes)
- [Gateway - Deployment - Lambda](https://grafbase.com/docs/gateway/deployment/lambda)
- [Gateway - Extensions](https://grafbase.com/docs/gateway/extensions): Learn how to extend the functionality of the Grafbase Gateway with extensions.
- [Gateway - Extensions - Specs - Grafbase directives & types for extensions](https://grafbase.com/docs/gateway/extensions/specs/grafbase-spec): Specification of all the grafbase directives and types available for extensions.
- [Gateway - Extensions - Specs - Grafbase directives & types for extensions - v1.0](https://grafbase.com/docs/gateway/extensions/specs/grafbase-spec/v1.0)
- [Gateway - Extensions - Specs - Composite schemas with Grafbase](https://grafbase.com/docs/gateway/extensions/specs/composite-schemas-spec): Specification of all the supported composite schemas directives and their changes
- [Gateway - Extensions - Specs - Composite schemas with Grafbase - v1.0](https://grafbase.com/docs/gateway/extensions/specs/composite-schemas-spec/v1.0)
- [Gateway - MCP](https://grafbase.com/docs/gateway/mcp): Learn how to configure Model Context Protocol server
- [Gateway - Observability](https://grafbase.com/docs/gateway/observability): Learn about Grafbase Observability, a powerful tool to monitor gateway operations and errors through logs, traces, and metrics.
- [Gateway - Performance - Automatic Persisted Queries](https://grafbase.com/docs/gateway/performance/automatic-persisted-queries): Learn how to use Automatic Persisted Queries to optimize your GraphQL requests.
- [Gateway - Performance - Entity Caching](https://grafbase.com/docs/gateway/performance/entity-caching): Learn how to configure Entity Caching in the Grafbase Gateway.
- [Gateway - Performance - Compression](https://grafbase.com/docs/gateway/performance/compression)
- [Gateway - Security](https://grafbase.com/docs/gateway/security): Learn about the security features of Grafbase, the easiest way to secure federated GraphQL APIs.
- [Gateway - Security - Trusted Documents](https://grafbase.com/docs/gateway/security/trusted-documents): Register an allow-list of GraphQL operations for security and performance
- [Gateway - Security - Rate Limiting](https://grafbase.com/docs/gateway/security/rate-limiting): Learn how to configure rate limiting in Grafbase Gateway to protect your GraphQL APIs from abuse.
- [Gateway - Security - Operation Limits](https://grafbase.com/docs/gateway/security/operation-limits): Protect your GraphQL API from attacks like complex and deeply nested queries that overload the server and/or database.
- [Gateway - Security - Complexity control](https://grafbase.com/docs/gateway/security/complexity-control): Limit load on downstream servers by blocking overly complex queries
- [Gateway - Security - Message Signatures](https://grafbase.com/docs/gateway/security/message-signatures): Securely sign subgraph HTTP requests using HTTP message signatures
- [Gateway - Security - Authentication](https://grafbase.com/docs/gateway/security/authentication): Control access to your federated graph.
- [Gateway - Security - Authorization](https://grafbase.com/docs/gateway/security/authorization): Control access to specific fields, objects and more in your federated graph.
- [Gateway - Security - Access Logs](https://grafbase.com/docs/gateway/security/access-logs): Customize access logs for the Grafbase Gateway.
- [Gateway - Security - Access Tokens](https://grafbase.com/docs/gateway/security/access-tokens): Personal Access Tokens grant access for the Grafbase CLI, Management API, and the Grafbase Gateway.
- [Gateway - Arguments](https://grafbase.com/docs/gateway/arguments): Grafbase Gateway Command Line Arguments
- [Gateway - Configuration - Authentication](https://grafbase.com/docs/gateway/configuration/authentication)
- [Gateway - Configuration - Automatic Persisted Queries](https://grafbase.com/docs/gateway/configuration/automatic-persisted-queries): Automatic Persisted Queries reference configuration options.
- [Gateway - Configuration - Cross-Origin Resource Sharing](https://grafbase.com/docs/gateway/configuration/cross-origin-resource-sharing)
- [Gateway - Configuration - Cross-Site Request Forgery Prevention](https://grafbase.com/docs/gateway/configuration/cross-site-request-forgery-prevention)
- [Gateway - Configuration - Complexity Control](https://grafbase.com/docs/gateway/configuration/complexity-control)
- [Gateway - Configuration - Durations](https://grafbase.com/docs/gateway/configuration/durations)
- [Gateway - Configuration - Entity Cache](https://grafbase.com/docs/gateway/configuration/entity-cache): Gateway configuration options
- [Gateway - Configuration - Gateway](https://grafbase.com/docs/gateway/configuration/gateway): Configure the Grafbase Gateway
- [Gateway - Configuration - Graph](https://grafbase.com/docs/gateway/configuration/graph)
- [Gateway - Configuration - MCP](https://grafbase.com/docs/gateway/configuration/mcp)
- [Gateway - Configuration - Header Rules](https://grafbase.com/docs/gateway/configuration/header-rules): Gateway configuration options
- [Gateway - Configuration - Health Checks](https://grafbase.com/docs/gateway/configuration/health-checks)
- [Gateway - Configuration - Hooks](https://grafbase.com/docs/gateway/configuration/hooks)
- [Gateway - Configuration - Extensions](https://grafbase.com/docs/gateway/configuration/extensions): Learn how to configure extensions in the Grafbase Gateway.
- [Gateway - Configuration - Message Signatures](https://grafbase.com/docs/gateway/configuration/message-signatures): Configuration options for message signatures.
- [Gateway - Configuration - Network](https://grafbase.com/docs/gateway/configuration/network)
- [Gateway - Configuration - Operation Limits](https://grafbase.com/docs/gateway/configuration/operation-limits): Gateway configuration options
- [Gateway - Configuration - Operation Caching](https://grafbase.com/docs/gateway/configuration/operation-caching)
- [Gateway - Configuration - Rate Limits](https://grafbase.com/docs/gateway/configuration/rate-limits): Configure rate limiting
- [Gateway - Configuration - Subgraph Configuration](https://grafbase.com/docs/gateway/configuration/subgraph-configuration): Configure settings per subgraph to add to or override global settings
- [Gateway - Configuration - Telemetry](https://grafbase.com/docs/gateway/configuration/telemetry): Gateway configuration options
- [Gateway - Configuration - Transport Layer Security](https://grafbase.com/docs/gateway/configuration/transport-layer-security)
- [Gateway - Configuration - Trusted Documents](https://grafbase.com/docs/gateway/configuration/trusted-documents): Gateway configuration options
- [Gateway - Configuration - Websockets](https://grafbase.com/docs/gateway/configuration/websockets)
- [Gateway - Errors](https://grafbase.com/docs/gateway/errors): Gateway error codes and messages
- [Gateway - Telemetry - Tracing Spans and Attributes](https://grafbase.com/docs/gateway/telemetry/tracing-attributes): Spans and Attributes for Gateway Tracing
- [Gateway - Telemetry - Metrics and Attributes](https://grafbase.com/docs/gateway/telemetry/metrics-attributes): Metrics and Attributes for Grafbase Gateway
- [Platform - API](https://grafbase.com/docs/platform/api): Manage projects using the Grafbase API.
- [Platform - Schema Checks](https://grafbase.com/docs/platform/schema-checks): Learn about the Grafbase schema checks, a powerful tool to avoid breaking changes to your GraphQL schema.
- [Platform - Schema Proposals](https://grafbase.com/docs/platform/schema-proposals): Learn about Grafbase Schema Proposals, a powerful tool to design, discuss, review and approve changes to subgraph schemas before they can be published.
- [Platform - Schema Registry](https://grafbase.com/docs/platform/schema-registry): Learn about the Grafbase schema registry, a powerful tool for managing federated GraphQL APIs.
- [Platform - Self-Hosting](https://grafbase.com/docs/platform/self-hosting): Self-hosted version of the Grafbase platform.
- [Platform - Self-Hosting - Installation](https://grafbase.com/docs/platform/self-hosting/installation): Learn how to install the Grafbase Enterprise Platform, a powerful on-prem GraphQL Federation solution that provides complete control over your data and infrastructure.
- [Platform - Self-Hosting - Charts - API](https://grafbase.com/docs/platform/self-hosting/charts/api)
- [Platform - Self-Hosting - Charts - Dashboard](https://grafbase.com/docs/platform/self-hosting/charts/dashboard)
- [Platform - Self-Hosting - Charts - Telemetry Sink](https://grafbase.com/docs/platform/self-hosting/charts/telemetry-sink)
- [Platform - Self-Hosting - Charts - OpenTelemetry Collector](https://grafbase.com/docs/platform/self-hosting/charts/otel-collector)
- [Platform - Self-Hosting - Charts - Zitadel](https://grafbase.com/docs/platform/self-hosting/charts/zitadel)
- [Platform - Self-Hosting - Charts - Postgres](https://grafbase.com/docs/platform/self-hosting/charts/postgres)
- [Platform - Self-Hosting - Charts - ClickHouse](https://grafbase.com/docs/platform/self-hosting/charts/clickhouse)
- [Platform - Self-Hosting - Charts - Minio](https://grafbase.com/docs/platform/self-hosting/charts/minio)
- [Platform - Self-Hosting - Charts - Kafka](https://grafbase.com/docs/platform/self-hosting/charts/kafka)
- [Platform - Self-Hosting - Release notes - v0.8.0](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.8.0)
- [Platform - Self-Hosting - Release notes - v0.7.0](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.7.0)
- [Platform - Self-Hosting - Release notes - v0.6.6](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.6.6)
- [Platform - Self-Hosting - Release notes - v0.6.5](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.6.5)
- [Platform - Self-Hosting - Release notes - v0.6.4](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.6.4)
- [Platform - Self-Hosting - Release notes - v0.6.3](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.6.3)
- [Platform - Self-Hosting - Release notes - v0.6.2](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.6.2)
- [Platform - Self-Hosting - Release notes - v0.6.1](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.6.1)
- [Platform - Self-Hosting - Release notes - v0.6.0](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.6.0)
- [Platform - Self-Hosting - Release notes - v0.5.2](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.5.2)
- [Platform - Self-Hosting - Release notes - v0.4.2](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.4.2)
- [Platform - Self-Hosting - Release notes - v0.4.1](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.4.1)
- [Platform - Self-Hosting - Release notes - v0.4.0](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.4.0)
- [Platform - Self-Hosting - Release notes - v0.3.0](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.3.0)
- [Platform - Self-Hosting - Release notes - v0.2.1](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.2.1)
- [Platform - Self-Hosting - Release notes - v0.1.2](https://grafbase.com/docs/platform/self-hosting/release-notes/v0.1.2)
- [Platform - Self-Hosting - CLI](https://grafbase.com/docs/platform/self-hosting/cli): Using the Grafbase CLI with your own self-hosted Grafbase Enterprise Platform.
- [CLI](https://grafbase.com/docs/cli)
- [CLI - Installation](https://grafbase.com/docs/cli/installation): Learn how to install the Grafbase CLI.
- [CLI - Commands - Branch](https://grafbase.com/docs/cli/commands/branch)
- [CLI - Commands - Check](https://grafbase.com/docs/cli/commands/check)
- [CLI - Commands - Completions](https://grafbase.com/docs/cli/commands/completions)
- [CLI - Commands - Compose](https://grafbase.com/docs/cli/commands/compose)
- [CLI - Commands - Create](https://grafbase.com/docs/cli/commands/create)
- [CLI - Commands - MCP](https://grafbase.com/docs/cli/commands/mcp)
- [CLI - Commands - Dev](https://grafbase.com/docs/cli/commands/dev)
- [CLI - Commands - Extension](https://grafbase.com/docs/cli/commands/extension)
- [CLI - Commands - Introspect](https://grafbase.com/docs/cli/commands/introspect)
- [CLI - Commands - Lint](https://grafbase.com/docs/cli/commands/lint)
- [CLI - Commands - Login](https://grafbase.com/docs/cli/commands/login)
- [CLI - Commands - Logout](https://grafbase.com/docs/cli/commands/logout)
- [CLI - Commands - Publish](https://grafbase.com/docs/cli/commands/publish)
- [CLI - Commands - Schema](https://grafbase.com/docs/cli/commands/schema)
- [CLI - Commands - Subgraphs](https://grafbase.com/docs/cli/commands/subgraphs)
- [CLI - Commands - Trust](https://grafbase.com/docs/cli/commands/trust)
- [Federation - Overview](https://grafbase.com/docs/federation/overview): Learn about the GraphQL Federation feature of Grafbase, the easiest way to manage large scale federated graphs.
- [Federation - Directives](https://grafbase.com/docs/federation/graphql-directives): Learn how to use GraphQL directives to control access and composition in your federated graph.


## Blog
- [A complete GraphQL Federation stack: What you need (and what you don't)](https://grafbase.com/blog/a-complete-graphql-federation-stack-what-you-need): Learn what components are essential for a production-ready GraphQL Federation stack and how Grafbase simplifies federation with virtual subgraphs, removing the need for dedicated GraphQL services while maintaining all the benefits.
- [Announcing $7.3m to build the GraphQL platform of the future](https://grafbase.com/blog/announcing-7-3m-funding): We're excited to announce Grafbase raised $7.3m in funding to build the best developer platform to build and deploy GraphQL APIs.
- [Introducing Grafbase Enterprise Platform](https://grafbase.com/changelog/announcing-grafbase-enterprise-platform): Run the whole Grafbase platform on your own infrastructure.
- [Announcing Schema Proposals](https://grafbase.com/changelog/announcing-schema-proposals): Propose, discuss, and approve schema changes
- [Federating AWS AppSync GraphQL APIs](https://grafbase.com/blog/appsync-tutorial): Use AWS AppSync subgraphs in your federated graph and join data from other services.
- [Automatic Persisted Queries](https://grafbase.com/changelog/automatic-persisted-queries): Reduce request payload size to improve performance
- [Batching](https://grafbase.com/changelog/batching): Combine multiple GraphQL requests into one
- [Benchmarking Grafbase vs Apollo vs Cosmo vs Mesh](https://grafbase.com/blog/benchmarking-grafbase-vs-apollo-vs-cosmo-vs-mesh): Benchmarking GraphQL Federation gateways
- [Building for speed: How GraphQL Federation enables high-velocity teams](https://grafbase.com/blog/building-for-speed-how-graphql-federation-enables-high-velocity-teams): Learn how GraphQL Federation removes team coordination bottlenecks, enabling faster delivery by decentralizing schema ownership while maintaining a unified API. Discover how this approach increases team autonomy and accelerates product development.
- [Graph management improvements to the Grafbase CLI](https://grafbase.com/changelog/cli-branch-and-environment-management): Easier ways to manage graphs from CI based workflows and your terminal
- [Customize your GraphQL Federation authentication and authorization with Grafbase Extensions](https://grafbase.com/blog/custom-authentication-and-authorization-in-graphql-federation): Learn how to setup and configure custom authentication and/or authorization with extensions to integrate with any authentication provider, configure field-level authorization and more in GraphQL Federation.
- [Grafbase Extensions now power federated GraphQL APIs with Kafka](https://grafbase.com/changelog/federated-graphql-apis-with-kafka): Integrate Apache Kafka directly into your federated GraphQL API with zero infrastructure management - no subgraphs, no manual stitching, and no extra services required.
- [Grafbase Extensions now power Federated GraphQL APIs with Postgres](https://grafbase.com/changelog/federated-graphql-apis-with-postgres): Integrate PostgreSQL databases directly into your federated GraphQL API with zero infrastructure management - no subgraphs, no manual stitching, and no extra services required.
- [Announcing support for GraphQL Subscriptions](https://grafbase.com/changelog/federated-subscriptions): Build your real-time applications with GraphQL Federation
- [Getting started with Rust and WebAssembly](https://grafbase.com/blog/getting-started-with-rust-and-webassembly): Learn to compile Rust to WebAssembly for use in the browser, Node.js and Deno
- [Grafbase achieves SOC 2 Type II compliance](https://grafbase.com/blog/grafbase-achieves-soc-2-type-ii-compliance): We’re pleased to announce that Grafbase has successfully achieved SOC 2 Type II compliance, an important milestone in our ongoing commitment to trust, security, and operational excellence.
- [Grafbase joins the GraphQL Foundation](https://grafbase.com/blog/grafbase-joins-the-graphql-foundation): Grafbase officially becomes a member of the GraphQL Foundation to support the evolution of GraphQL.
- [Introducing the Grafbase Lambda Gateway](https://grafbase.com/changelog/grafbase-lambda-gateway): Self-host the Grafbase Gateway in AWS Lambda platform
- [Introducing graphql-lint and gqlint](https://grafbase.com/changelog/graphql-lint): A Rust based GraphQL linter crate and CLI
- [Integrate gRPC services into your GraphQL API declaratively](https://grafbase.com/changelog/grpc-extension): Integrate gRPC services into your federated graphs without coding.
- [How we built the Grafbase local development experience in Rust](https://grafbase.com/blog/how-we-built-the-grafbase-cli-in-rust): Learn how we built a high performance CLI with Rust, WebAssembly and SQLite.
- [Introducing Complexity Control](https://grafbase.com/changelog/introducing-complexity-control): Limit load on downstream servers by blocking overly complex operations
- [Introducing Custom Checks](https://grafbase.com/changelog/introducing-custom-checks): Add your own business logic to Schema Checks
- [Customize and enhance your GraphQL APIs with Grafbase Extensions](https://grafbase.com/blog/introducing-grafbase-extensions): Federate any API or database without subgraphs.
- [Introducing Grafbase Gateway WebAssembly Hooks](https://grafbase.com/blog/introducing-grafbase-gateway-webassembly-hooks): How to customize the behavior of your GraphQL federation gateway
- [Introducing the Grafbase Gateway Hooks Rust SDK](https://grafbase.com/changelog/introducing-grafbase-hooks-sdk): A Rust SDK for creating custom hooks for the Grafbase Gateway.
- [Introducing MCP support in Grafbase - The first GraphQL platform with native AI integration](https://grafbase.com/changelog/introducing-mcp): We’re excited to announce support for Model Context Protocol, marking a major step forward in how developers and AI agents interact with GraphQL APIs.
- [Introducing realtime GraphQL analytics](https://grafbase.com/changelog/introducing-realtime-graphql-analytics): Analytics now available for every project, with zero configuration
- [Full visibility into federated graphs with Tracing](https://grafbase.com/changelog/introducing-tracing): Introducing real-time observability into your GraphQL API with Grafbase Tracing.
- [Introducing Trusted Documents](https://grafbase.com/changelog/introducing-trusted-documents): Forbid unwanted GraphQL queries using an allow-list
- [The Lifecycle of a Federated GraphQL API, from Chaos to Coherence](https://grafbase.com/blog/lifecycle-of-a-federated-graphql-api): The Lifecycle of a Federated GraphQL API, from Chaos to Coherence
- [Solving context explosion in GraphQL MCP servers](https://grafbase.com/blog/managing-mcp-context-graphql): Expose complex GraphQL APIs without bloating the context with the full schema
- [Introducing Message Signatures](https://grafbase.com/changelog/message-signatures): Enforce subgraph request integrity using HTTP message signatures
- [Enhance Your GraphQL Federation API with NATS Subscriptions using Grafbase](https://grafbase.com/blog/nats-subscriptions-in-grafbase-gateway): Learn how to publish and subscribe to NATS subjects directly from your federated GraphQL API with Grafbase's NATS extension. Enhance your GraphQL Federation capabilities with seamless integration and powerful features.
- [Introducing Operation Analytics](https://grafbase.com/changelog/operation-analytics): Real-time insights into your GraphQL operations.
- [Operation Limits](https://grafbase.com/changelog/operation-limits): Protect your GraphQL API from attacks like complex and deeply nested queries.
- [Announcing Rate Limiting](https://grafbase.com/changelog/rate-limiting): Protect GraphQL APIs with Grafbase Rate Limiting.
- [Introducing local composition using the Grafbase CLI](https://grafbase.com/changelog/releasing-grafbase-compose): Compose your subgraphs into a federated GraphQL schema locally
- [Announcing three open source Rust crates for the GraphQL ecosystem](https://grafbase.com/blog/rust-graphql-crates-open-source): Announcing open source Rust crates for validating, diffing and composing GraphQL schemas.
- [Introducing Schema Checks](https://grafbase.com/changelog/schema-checks): Evolve your GraphQL schema with confidence.
- [Introducing Schema Registry](https://grafbase.com/changelog/schema-registry): Version control for your GraphQL schemas.
- [Security considerations in GraphQL Federation](https://grafbase.com/blog/security-considerations-in-graphql-federation): Learn how to secure GraphQL Federation architectures with best practices for authentication, authorization, schema design, and query protection. Discover how Grafbase simplifies federation security.
- [Self-host Grafbase](https://grafbase.com/changelog/self-host): The Grafbase Gateway can now be deployed to your own infrastructure.
- [What are MCP Servers and how does Grafbase support them?](https://grafbase.com/blog/what-are-mcp-servers): Learn how MCP servers enable AI models to access real-time data directly through GraphQL APIs, and discover how Grafbase enables scalable MCP-ready architectures.
- [What is GraphQL Federation? A practical guide for modern APIs](https://grafbase.com/blog/what-is-graphql-federation-practical-guide): GraphQL Federation enables you to build modular, scalable APIs by composing multiple GraphQL services into a single endpoint. Learn how it works and how Grafbase makes federation simple.
- [Why GraphQL is eating the API world](https://grafbase.com/blog/why-graphql-is-eating-the-api-world): Why GraphQL is eating the API world
- [Why self-host Grafbase? Benefits of deploying the Grafbase Enterprise Platform in your own environment](https://grafbase.com/blog/why-self-host-grafbase): Explore the benefits of self-hosting Grafbase Enterprise Platform for data residency compliance, infrastructure control, security integration, and deployment flexibility. Learn when self-hosting makes sense for your organization versus using the managed service.

