# Example Project - Full Documentation

This is the extended version of the llms.txt file with more comprehensive information.

## Overview

This is an example llms.txt file that provides context about a fictional project. It contains key information that helps LLMs understand the project structure, purpose, and how to work with it.

## Detailed Project Structure

```
example-project/
├── src/                    # Source code
│   ├── index.js           # Main entry point
│   ├── components/        # React components
│   ├── utils/            # Utility functions
│   └── config/           # Configuration files
├── tests/                 # Test files
│   ├── unit/             # Unit tests
│   └── integration/      # Integration tests
├── docs/                  # Documentation
│   ├── api.md           # API documentation
│   └── guides/          # User guides
├── package.json          # NPM package file
└── README.md            # Project readme
```

## Architecture

The project follows a modular architecture with clear separation of concerns:

- **Components**: Reusable UI components
- **Services**: Business logic and API calls
- **Utils**: Helper functions and utilities
- **Config**: Environment-specific configuration

## Key Features

### Feature 1: Core functionality
Detailed explanation of the core functionality including implementation details and usage examples.

### Feature 2: Additional capabilities
Extended features that enhance the project's capabilities with examples and best practices.

### Feature 3: Integration points
How to integrate with external services and APIs.

## Installation & Setup

```bash
# Clone the repository
git clone https://github.com/example/example-project
cd example-project

# Install dependencies
npm install

# Configure environment
cp .env.example .env
# Edit .env with your settings

# Run development server
npm run dev
```

## API Reference

### Main Functions

#### `initialize(config)`
Initializes the project with the given configuration.

#### `process(data)`
Processes input data and returns results.

#### `cleanup()`
Performs cleanup operations.

## Testing

```bash
# Run all tests
npm test

# Run unit tests only
npm run test:unit

# Run with coverage
npm run test:coverage
```

## Contributing

Please see our contributing guidelines in CONTRIBUTING.md. We welcome pull requests and issue reports.